% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bsnsing.R
\docType{package}
\name{bsnsing-package}
\alias{bsnsing-package}
\title{bsnsing: A package for decision tree learning with Boolean sensing}
\description{
The bsnsing package provides functions for building a decision tree classifier and making predictions. It solves the two-class and multi-class classification problems under the supervised learning paradigm. While building a decision tree, \code{bsnsing} uses a Boolean rule involving multiple variables to split a node. Each split rule is identified by solving an optimization model that minimizes misclassification and complexity. Compared to other decision tree learners such as \code{\link[rpart]{rpart}} and \code{\link[party]{party}} that split a node based on a single variable, \code{\link{bsnsing}} can provide a shorter and more interpretable tree while scoring a high predictive accuracy.
}
\section{Learn functions}{

The learn functions include \code{\link{bsnsing}}, \code{\link{bsnsing.formula}} and \code{\link{bsnsing.default}}.
}

\section{Predict functions}{

The predict functions include: \code{\link{predict.bsnsing}} and \code{\link{predict.mbsnsing}}.
}

\section{Auxilliary functions}{

Here is a list of internal functions of the package that are open for end users.
\code{\link{summary.bsnsing}}
\code{\link{summary.mbsnsing}}
\code{\link{binarize}},
\code{\link{binarize.numeric}},
\code{\link{binarize.factor}},
\code{\link{binarize.y}},
\code{\link{bslearn}},
\code{\link{bscontrol}}
}

\section{Future work}{

Visualization functions. Existing tree plotting functions such as \code{\link[rpart]{plot.rpart}} and \code{\link[rpart.plot]{rpart.plot}} restrict the tree structure to have single-variable splits, thus it is not straightforward to adopt these functions for plotting a \code{\link{bsnsing}} object. A dedicated viualization tool should be developed.

Default parameter tuning for out-of-the-box performance. The default parameters in \code{\link{bscontrol}} are currently set quite arbitrarily. Experiments will be performed on a large collection of data sets in order to pinpoint the parameter combination that work well (in terms of training speed, predictive accuracy and interpretability, etc.) under most use cases.

Weighting positive and negative cases in imbalanced training sets. If false positive and false negative are given the same weight in a highly imbalanced data set, a null split might be produced in as early as the root node, resulting in a trivial classification, i.e., claiming all cases to fall in the majority class. A weighting scheme should be implemented to ameliorate this situation.
}

\author{
Yanchao Liu
}
